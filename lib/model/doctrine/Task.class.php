<?php

/**
 * Task
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    taskbroker
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Task extends BaseTask
{
    /**
     * Get a shortened description suitable for displaying in a table. Short description length set in 'app.yml'
     */
    public function getShortDescription() {
        $length = sfConfig::get("app_short_description_length");
        $desc = $this->getDescription();
        return (strlen($desc) <= $length) ? ($desc) : (substr($desc,0,$length-3) . "...");
    }

    /**
     * Return the name of the user that created this task.
     */
    public function getCreatorName() {
        return $this->getCreator()->getUsername();
    }

    /**
     * Return whether or not the supplied user is the creator of this task.
     *
     * @param <type> $user
     * @return boolean
     */
    public function isUserCreator($user) {
        return $this->getCreatorId() == $user->getId();
    }

    /**
     * Returns the current lowest bid for this task
     *
     * @param <type> $user
     * @return boolean
     */
    public function getLowestBid() {
        $bid_rs = Doctrine_Core::getTable("Bid")->createQuery()
                ->select("id")
                ->where("task_id = ?", $this->getId())
                ->orderBy("price DESC")
                ->limit("1")
                ->execute();
        if (count($bid_rs) == 0)
            return null;
        return Doctrine_Core::getTable("Bid")->find($bid_rs[0]->id);
    }

    public function setToCancelled() {
        $this->setStatus(TaskTable::$STATUSES["cancelled"]);
        /* TODO: code in here to send email */
    }
    public function setToAccepted() {
        $this->setStatus(TaskTable::$STATUSES["accepted"]);
    }
    public function setToCompleted() {
        $this->setStatus(TaskTable::$STATUSES["completed"]);
        /* TODO: code in here to send email */
    }
}
